# version: "3.9"

# services:
#   # ================== POSTGRES ==================
#   postgres:
#     image: postgres:latest
#     container_name: postgres
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: mydatabase
#     ports:
#       - "5432:5432"
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     networks:
#       - app-network

#   # ================== REDIS ==================
#   redis:
#     image: redis:7
#     container_name: global-redis
#     ports:
#       - "6379:6379"
#     restart: unless-stopped
#     networks:
#       - app-network

#   # ================== RABBITMQ ==================
#   rabbitmq:
#     image: rabbitmq:3-management
#     container_name: global-rabbitmq
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     environment:
#       RABBITMQ_DEFAULT_USER: user
#       RABBITMQ_DEFAULT_PASS: password
#     healthcheck:
#       test: ["CMD", "rabbitmq-diagnostics", "ping"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     restart: unless-stopped
#     networks:
#       - app-network

#   # ================== MONGO REPLICA SET ==================
#   mongo1:
#     image: mongo:7
#     container_name: mongo1
#     command: ["--replSet", "rs0", "--bind_ip_all"]
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo1-data:/data/db
#       - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
#     networks:
#       - app-network
#     restart: unless-stopped

#   mongo2:
#     image: mongo:7
#     container_name: mongo2
#     command: ["--replSet", "rs0", "--bind_ip_all"]
#     ports:
#       - "27018:27017"
#     volumes:
#       - mongo2-data:/data/db
#     networks:
#       - app-network
#     restart: unless-stopped

#   mongo3:
#     image: mongo:7
#     container_name: mongo3
#     command: ["--replSet", "rs0", "--bind_ip_all"]
#     ports:
#       - "27019:27017"
#     volumes:
#       - mongo3-data:/data/db
#     networks:
#       - app-network
#     restart: unless-stopped

# volumes:
#   pgdata:
#   mongo1-data:
#   mongo2-data:
#   mongo3-data:

# networks:
#   app-network:
#     driver: bridge 

version: "3.9"

services:
  # ================== POSTGRES ==================
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # ================== REDIS ==================
  redis:
    image: redis:7
    container_name: global-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  # ================== RABBITMQ ==================
  rabbitmq:
    image: rabbitmq:3-management
    container_name: global-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ================== MONGO REPLICA SET ==================
  mongo1:
    image: mongo:7
    container_name: mongo1
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - mongo1-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped

  mongo2:
    image: mongo:7
    container_name: mongo2
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27018:27017"
    volumes:
      - mongo2-data:/data/db
    restart: unless-stopped

  mongo3:
    image: mongo:7
    container_name: mongo3
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27019:27017"
    volumes:
      - mongo3-data:/data/db
    restart: unless-stopped

volumes:
  pgdata:
  mongo1-data:
  mongo2-data:
  mongo3-data:

